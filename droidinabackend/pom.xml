<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>

    <groupId>be.ordina.fsm</groupId>
    <artifactId>FieldServiceManagementGAE</artifactId>

    <properties>
        <appengine.app.version>1</appengine.app.version>
        <appengine.target.version>1.7.5</appengine.target.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.version>3.2.3.RELEASE</org.springframework.version>
        <cxf.version>2.7.5</cxf.version>
    </properties>

    <repositories>
        <repository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </repository>
        <repository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </repository>
   		<repository>
            <id>DataNucleus_Repos2</id>
            <url>http://www.datanucleus.org/downloads/maven2</url>
            <name>DataNucleus Repository</name>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        
   		<repository>
 			<id>Java.Net</id>
  			<url>http://download.java.net/maven/2/</url>
		</repository>
   		
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </pluginRepository>
    	<pluginRepository>
            <id>DataNucleus_2</id>
            <url>http://www.datanucleus.org/downloads/maven2/</url>
        </pluginRepository>
    </pluginRepositories>
    
    <dependencies>
        <!-- Compile/runtime dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${appengine.target.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${appengine.target.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${appengine.target.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Java ee dependency -->
<!--     	<dependency> -->
<!-- 	    	<groupId>javax</groupId> -->
<!-- 	    	<artifactId>javaee-api</artifactId> -->
<!-- 	    	<version>6.0</version> -->
<!-- 		</dependency> -->
        
        <!-- Spring dependencies -->
        
        <!--
	    Core utilities used by other modules.
	    Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
		 This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		 Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
		 Define this if you need any of these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		 Bean Factory and JavaBeans utilities (depends on spring-core)
		 Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		 Expression Language (depends on spring-core)
		 Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
		 Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
		 Define this if you use Spring Transactions or DAO Exception Hierarchy
		 (org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency> 
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
		 Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework</groupId> -->
<!-- 			<artifactId>spring-jdbc</artifactId> -->
<!-- 			<version>${org.springframework.version}</version> -->
<!-- 		</dependency> -->
		 
		<!--
		 Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
		 (depends on spring-core, spring-beans, spring-context, spring-tx)
		 Define this if you need ORM (org.springframework.orm.*)
		-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework</groupId> -->
<!-- 			<artifactId>spring-orm</artifactId> -->
<!-- 			<version>${org.springframework.version}</version> -->
<!-- 		</dependency> -->
		 
		<!--
		 Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
		 (depends on spring-core, spring-beans, spring-context)
		 Define this if you need OXM (org.springframework.oxm.*)
		-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework</groupId> -->
<!-- 			<artifactId>spring-oxm</artifactId> -->
<!-- 			<version>${org.springframework.version}</version> -->
<!-- 		</dependency> -->
		 
		<!--
		 Web application development utilities applicable to both Servlet and Portlet Environments
		 (depends on spring-core, spring-beans, spring-context)
		 Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		 Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		 
		<!--
		 Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		 Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
		-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework</groupId> -->
<!-- 			<artifactId>spring-webmvc-portlet</artifactId> -->
<!-- 			<version>${org.springframework.version}</version> -->
<!-- 		</dependency> -->
		 
		<!--
		 Support for testing Spring applications with tools such as JUnit and TestNG
		 This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		
		
		<!--  CXF depencencies -->
<!-- 		<dependency> -->
<!--         	<groupId>org.apache.cxf</groupId> -->
<!--         	<artifactId>cxf-bundle-jaxrs</artifactId> -->
<!--         	<version>${cxf.version}</version> -->
<!--         	<exclusions> -->
<!--             	<exclusion> -->
<!--             		<groupId>org.eclipse.jetty</groupId> -->
<!--             		<artifactId>jetty-server</artifactId> -->
<!--             	</exclusion> -->
<!--         	</exclusions>  -->
<!--     	</dependency> -->
    	
    	
    	<!-- Jackson -->
    	<dependency>
	        <groupId>org.codehaus.jackson</groupId>
	        <artifactId>jackson-jaxrs</artifactId>
	        <version>1.6.1</version>
	    </dependency>
        <dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>1.9.9</version>
		</dependency>
		<dependency>
       		<groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-core-asl</artifactId>
		    <version>1.9.9</version>
		</dependency>
		
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!--  dozer mapping dependency -->
<!-- 		<dependency> -->
<!-- 		    <groupId>net.sf.dozer</groupId> -->
<!-- 		    <artifactId>dozer</artifactId> -->
<!-- 		    <version>5.4.0</version> -->
<!-- 		</dependency> -->
    </dependencies>

    <build>
        <finalName>ofsm</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.5.1</version>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
<!--                 <configuration> -->
<!--                     <archiveClasses>true</archiveClasses> -->
<!--                     <webResources> -->
<!--                         in order to interpolate version from pom into appengine-web.xml -->
<!--                         <resource> -->
<!--                             <directory>${basedir}/src/main/webapp/WEB-INF</directory> -->
<!--                             <filtering>true</filtering> -->
<!--                             <targetPath>WEB-INF</targetPath> -->
<!--                         </resource> -->
<!--                     </webResources> -->
<!--                 </configuration> -->
            </plugin>

            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${appengine.target.version}</version>
                <configuration>
			        <jvmFlags>
			            <jvmFlag>-Ddatastore.default_high_rep_job_policy_unapplied_job_pct=20</jvmFlag>
			            <jvmFlag>-Xdebug</jvmFlag>
			            <jvmFlag>-Xnoagent</jvmFlag>
			            <jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</jvmFlag>
			        </jvmFlags>
			        <disableUpdateCheck>true</disableUpdateCheck>
			    </configuration>
            </plugin>
        </plugins>
    </build>

</project>
